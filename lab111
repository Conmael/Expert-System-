#include <iostream>
#include <time.h>
inline int max( int a, int b ){
return a > b ? a : b;
}
////////////////////// Main ///////////////////////
int main(int argc, char *argv[])
{ 
srand((unsigned)time(NULL)); 
const int n = 6; // размер массива 6x6
int matrix[n][n]; // матрица чисел
for( int i=0; i<n; i++ )
for( int j=0; j<n; j++ )
matrix[i][j] = (int)rand()%99; // генерация чисел
for( int i=0; i<n; i++ ){
for( int j=0; j<n; j++ )
printf("%3d", matrix[i][j] ); // вывод значений матрицы
puts("\n");
}
// поиск максимальных чисел в 4 зонах квадрата
int max1=0, max2=0, max3=0, max4=0;
for( int i=0; i<n; i++ )
for( int j=0; j<n; j++ )
// если читаем число из первой зоны и максимальное число зоны меньше читаемого числа
if( i < j && n-i >j && max1 < matrix[i][j] )
max1 = matrix[i][j];
// если читаем число из втророй зоны ...
else if( i <= j && n-i <= j && max2 < matrix[i][j] )
max2 = matrix[i][j];
// если читаем число из третьей зоны ...
else if( i > j && i+1 >= n-j && max3 < matrix[i][j] )
max3 = matrix[i][j];
// если читаем число из четвёртой зоны ...
else if( max4 < matrix[i][j]) 
max4 = matrix[i][j];
// Вывод результатов расчёта для 10 тёмно-синих частей матриц ( a, б, ... к )
printf("Task 1 = %d\n", max( max1, max2)); // задание 1 ( а )
printf("Task 2 = %d\n", max( max3, max4)); // задание 2 ( б )
printf("Task 3 = %d\n", max1 ); // задание 3 ( в )
printf("Task 4 = %d\n", max3 ); // задание 4 ( г )
printf("Task 5 = %d\n", max( max1, max3)); // задание 5 ( д )
printf("Task 6 = %d\n", max( max4, max2)); // задание 6 ( е )
printf("Task 7 = %d\n", max4 ); // задание 7 ( ж )
printf("Task 8 = %d\n", max2 ); // задание 8 ( з )
printf("Task 9 = %d\n", max( max1, max4)); // задание 9 ( и )
printf("Task 10 = %d\n", max( max2, max3)); // задание 10 ( к )
getchar(); // пауза
return 0;
}
